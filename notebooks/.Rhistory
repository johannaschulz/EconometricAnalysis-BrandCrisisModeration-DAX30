summary(linreg_2_0)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_0) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_0)) #significant -> VIOLATED
# stepwise control adding
linreg_2_1 <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT, data = data)
summary(linreg_2_1)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_1) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_0)) #significant -> VIOLATED
# stepwise control adding
linreg_3_0 <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_0)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_3_0) # significant, violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# Finally: Adding 4th control: lagged VWAP
# Model 1.1 with controls, Crisis as IV
linreg1_0 <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg1_0)
library(lmtest)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_0) #significant, assumption violated
library(tseries)
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_0)) #significant -> VIOLATED
# stepwise control adding
linreg_3_0 <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_0)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_3_0) # significant, violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_0)) #significant -> VIOLATED
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg_3_0)
# stepwise control adding
linreg_3_1 <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_1)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_3_1) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_0)) #significant -> VIOLATED
library(carData)
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg1_0)
# to test all assumptions, the variable VWAP_lagged must be changed since as it is calculated, it has NaN at t=1 (1.1.2019)
# Last Observation Carried Forward
library(zoo)
data$VWAP_lagged_locf <- na.locf(data$VWAP_lagged, fromLast = TRUE)
# with WAP_lagged_locf
# Model 1.1 with controls, Crisis as IV
linreg1_0_OLS <- lm(VWAP ~ Crisis + Sector + TR + EBIT + WAP_lagged_locf, data = data)
# with VWAP_lagged_locf
# Model 1.1 with controls, Crisis as IV
linreg1_0_OLS <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged_locf, data = data)
summary(linreg1_0_OLS)
library(lmtest)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_0_OLS) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0_OLS) # not significant, assumption holds
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0) # not significant, assumption holds
# Finally: Adding 4th control: lagged VWAP
# Model 1.1 with controls, Crisis as IV
linreg1_0 <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg1_0)
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0) # significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0_OLS) # significant, assumption violated
# 3.1 Normaldistributuon of errors -> Plotting residuals against time
plot(residuals(linreg1_0_OLS) ~ data$MonthYear) # random, assumption holds
library(tseries)
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_0_OLS)) #significant -> VIOLATED
library(carData)
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg1_0_OLS)
# Model to test OLS with VWAP_lagged_lcos
linreg1_1_OLS <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged_lcos, data = data)
View(data)
# Model to test OLS with VWAP_lagged_locf
linreg1_1_OLS <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged_locf, data = data)
summary(linreg1_1_OLS)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_1_OLS) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_1_OLS) # not significant, assumption holds
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_1) # not significant, assumption holds
# 3.1 Normal distribution of errors -> Plotting residuals against time
plot(residuals(linreg1_1) ~ data$MonthYear) # random, assumption holds
# Finally: Adding 4th control: lagged VWAP
# Model 1.1 with controls, Crisis as IV
linreg1_0 <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg1_0)
library(lmtest)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_0_OLS) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0) # significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0) # significant, assumption violated
# 3.1 Normaldistributuon of errors -> Plotting residuals against time
plot(residuals(linreg1_0) ~ data$MonthYear) # random, assumption holds
# 3.1 Normaldistributuon of errors -> Plotting residuals against time
plot(residuals(linreg1_0_OLS) ~ data$MonthYear) # random, assumption holds
library(carData)
# 4. No multicollinearity -> VIF values of 5-10 indicate a strong correlation
vif(linreg1_0)
library(carData)
# 4. No multicollinearity -> VIF values of 5-10 indicate a strong correlation
vif(linreg1_0_OLS)
# Model 1.1 with controls, CPI as IV
linreg1_1 <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg1_1)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_1) #significant, assumption violated
# 3.1 Normal distribution of errors -> Plotting residuals against time
plot(residuals(linreg1_1) ~ data$MonthYear) # random, assumption holds
# 3.1 Normal distribution of errors -> Plotting residuals against time
plot(residuals(linreg1_1_OLS) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_1_OLS)) #significant -> VIOLATED
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_1)) #significant -> VIOLATED
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_1)) #significant -> VIOLATED
# 4. No multicollinearity ->
vif(linreg1_1_OLS)
# with all controls
linreg_2_0 <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + EBIT + TR + VWAP_lagged, data = data)
summary(linreg_2_0)
# model with VWAP_lagged_lcof
linreg_2_0_OLS <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + EBIT + TR + VWAP_lagged_lcof, data = data)
# model with VWAP_lagged_locf
linreg_2_0_OLS <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + EBIT + TR + VWAP_lagged_locf, data = data)
summary(linreg_2_0_OLS)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_0) #significant, assumption violated
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_0_OLS) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# stepwise control adding
linreg_2_0 <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + TR + EBIT, data = data)
summary(linreg_2_0)
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0) ~ data$MonthYear) # random, assumption holds
# Adding 3rd control: EBIT
linreg1_0_ <- lm(VWAP ~ Crisis + Sector + TR + EBIT, data = data)
summary(linreg1_0)
library(lmtest)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_0_) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_0_) # significant, assumption violated
# 3.1 Normaldistributuon of errors -> Plotting residuals against time
plot(residuals(linreg1_0_) ~ data$MonthYear) # random, assumption holds
library(tseries)
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_0_)) #significant -> VIOLATED
library(carData)
# 4. No multicollinearity -> VIF values of 5-10 indicate a strong correlation
vif(linreg1_0_)
library(carData)
# 4. No multicollinearity -> VIF values of 5-10 indicate a strong correlation
vif(linreg1_0)
# Finally, adding Heteroskedasticity Robust Standard Errors to the model to account for the violations
library(lmtest)
library(sandwich)
# Robust t test
coeftest_results <- coeftest(linreg1_0, vcov = vcovHC(linreg1_0, type = "HC0"))
print(coeftest_results)
# stepwise control adding
linreg1_1_ <- lm(VWAP ~ CPI + Sector + TR + EBIT, data = data)
summary(linreg1_1_)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg1_1_) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg1_1_) # not significant, assumption holds
# 3.1 Normal distribution of errors -> Plotting residuals against time
plot(residuals(linreg1_1_) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg1_1_)) #significant -> VIOLATED
# 4. No (strong) multicollinearity ->
vif(linreg1_1)
# Finally, adding Heteroskedasticity Robust Standard Errors to the model to account for the violations
# Robust t test
coeftest_results <- coeftest(linreg1_1, vcov = vcovHC(linreg1_1, type = "HC0"))
print(coeftest_results)
# stepwise control adding
linreg_2_0_ <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + TR + EBIT, data = data)
summary(linreg_2_0_)
# with all controls
linreg_2_0 <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + EBIT + TR + VWAP_lagged, data = data)
summary(linreg_2_0)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_0_) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_0_) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_0_) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_0_)) #significant -> VIOLATED
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg_2_0)
?vif
# 4. No multicollinearity -> VIF values not be higher than 5
vif(linreg_2_0, type ="predictor")
# stepwise control adding
linreg_2_1_ <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT, data = data)
summary(linreg_2_1_)
# with controls
linreg_2_1 <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg_2_1)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_2_1_) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_2_1_) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_2_1_) ~ data$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_2_1_)) #significant -> VIOLATED
# 4. No multicollinearity
vif(linreg_2_1, type ="predictor")
# Finally, adding Heteroskedasticity Robust Standard Errors to the model to account for the violations
# Robust t test
coeftest_results <- coeftest(linreg_2_1, vcov = vcovHC(linreg_2_1, type = "HC0"))
print(coeftest_results)
# with controls
linreg_3_0 <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_strongbrand)
summary(linreg_3_0)
# stepwise control adding
linreg_3_0_ <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_0_)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_3_0_) # significant, violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_3_0_) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_3_0_) ~ data$MonthYear) # random, assumption holds
View(subset_strongbrand)
# stepwise control adding
linreg_3_0_ <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_0_)
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_3_0_) ~ data$MonthYear) # random, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_3_0_) ~ subset_strongbrand$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_3_0_)) #significant -> VIOLATED
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg_3_0)
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg_3_0, type = "predictor")
# Finally, adding Heteroskedasticity Robust Standard Errors to the model to account for the violations
# Robust t test
coeftest_results <- coeftest(linreg_3_0, vcov = vcovHC(linreg_3_0, type = "HC0"))
print(coeftest_results)
# stepwise control adding
linreg_3_1_ <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT, data = subset_strongbrand)
summary(linreg_3_1_)
# with controls
linreg_3_1 <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_strongbrand)
summary(linreg_3_1)
# 1. Nonzero expectation: Zero mean for errors -> Resest test
resettest(linreg_3_1_) #significant, assumption violated
# 2. Homoscedasticity: Constant variance for errors -> Goldfeld-Quandt Test
gqtest(linreg_3_1_) # not significant, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_3_1_) ~ data$MonthYear) # random, assumption holds
# 3.1 Normal distribtion of errors -> Plotting residuals against time
plot(residuals(linreg_3_1_) ~ subset_strongbrand$MonthYear) # random, assumption holds
# 3.2 Errors distributed multivariate normal -> Jarque and Bera (1980)
jarque.bera.test(residuals(linreg_3_1_)) #significant -> VIOLATED
# 4. No multicollinearity -> VIF values should be smaller than 4
vif(linreg_3_1, type = "predictor")
# Finally, adding Heteroskedasticity Robust Standard Errors to the model to account for the violations
# Robust t test
coeftest_results <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(coeftest_results)
?vcovHC
?coeftest
library(dplyr)
# subset with observations from October 2019 to March 2020
subset_period <- data %>%
filter(MonthYear >= as.Date("2019-10-01") & MonthYear <= as.Date("2020-03-31"))
head(subset_period)
linreg_1_0_robust <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_0_robust)
linreg_1_0_robust <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_0_robust)
# Robust t test
linreg_1_0_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(linreg_1_0_period)
linreg_1_1_period <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_1_period)
# Robust t test
linreg_1_1_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(linreg_1_1_period)
linreg_2_0_period <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_0_period)
# Robust t test
linreg_2_0_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(linreg_2_0_period)
linreg_2_1_period <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_1_period)
linreg_2_0_period <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_0_period)
# Robust t test
linreg_2_0_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(linreg_2_0_period)
linreg_2_1_period <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_1_period)
# Robust t test
linreg_2_0_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_2_0_period, type = "HC0"))
# Robust t test
linreg_2_0_period <- coeftest(linreg_2_0_period, vcov = vcovHC(linreg_2_0_period, type = "HC0"))
# Robust t test
linreg_1_1_period <- coeftest(linreg_3_1, vcov = vcovHC(linreg_3_1, type = "HC0"))
print(linreg_1_1_period)
# Robust t test
linreg_1_1_period <- coeftest(linreg_1_1_period, vcov = vcovHC(linreg_1_1_period, type = "HC0"))
# Robust t test
coeftest_results <- coeftest(linreg_1_1_period, vcov = vcovHC(linreg_1_1_period, type = "HC0"))
# Robust t test
coeftest_results <- coeftest(linreg_1_0_period, vcov = vcovHC(linreg_1_0_period, type = "HC0"))
class(linreg_1_0_period)
linreg_1_0_period <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_1_0_period, vcov = vcovHC(linreg_1_0_period, type = "HC0"))
print(coeftest_results)
linreg_1_1_period <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_1_period)
# Robust t test
coeftest_results <- coeftest(linreg_1_1_period, vcov = vcovHC(linreg_1_1_period, type = "HC0"))
print(coeftest_results)
linreg_2_0_period <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_2_0_period, vcov = vcovHC(linreg_2_0_period, type = "HC0"))
print(coeftest_results)
linreg_2_1_period <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_1_period)
# Robust t test
coeftest_results <- coeftest(linreg_2_1_period, vcov = vcovHC(linreg_2_1_period, type = "HC0"))
print(coeftest_results)
linreg_3_0_period <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_3_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_3_0_period, vcov = vcovHC(linreg_3_0_period, type = "HC0"))
print(coeftest_results)
linreg_3_1_period <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_3_1_period)
# Robust t test
coeftest_results <- coeftest(linreg_3_1_period, vcov = vcovHC(linreg_3_1_period, type = "HC0"))
print(coeftest_results)
install.packages("broom")
library("broom")
library("broom")
# Convert each model's output to a tidy data frame
linreg_1_0_period <- broom::tidy(linreg_1_0_period)
linreg_1_1_period <- broom::tidy(linreg_1_1_period)
linreg_2_0_period <- broom::tidy(linreg_2_0_period)
linreg_2_1_period <- broom::tidy(linreg_2_1_period)
linreg_3_0_period <- broom::tidy(linreg_3_0_period)
linreg_3_1_period <- broom::tidy(linreg_3_1_period)
# Add a column to each data frame to identify the model
linreg_1_0_period$model <- "Model 1.0"
linreg_1_1_period$model <- "Model 1.1"
linreg_2_0_period$model <- "Model 2.0"
linreg_2_1_period$model <- "Model 2.1"
linreg_3_0_period$model <- "Model 3.0"
linreg_3_1_period$model <- "Model 3.1"
# Combine all data frames into one
regression_table <- rbind(linreg_1_0_period, linreg_1_1_period, linreg_2_0_period,linreg_2_1_period, linreg_3_0_period, linreg_3_1_period )
final_table <- combined_df %>%
select(model, term, estimate, std.error, statistic, p.value)
final_table <- regression_table %>%
select(model, term, estimate, std.error, statistic, p.value)
print(final_table)
install.packages("writexl")
library("writexl")
library("writexl")
writexl::write_xlsx(final_table, path = "regression_coefficients.xlsx")
library("writexl")
output_path <- "../outputs/regression_coefficients.xlsx"
writexl::write_xlsx(final_table, path = output_path)
# Robust t test
coeftest_results <- coeftest(linreg_1_0_period, vcov = vcovHC(linreg_1_0_period, type = "HC0"))
# Robust t test
coeftest_results <- coeftest(linreg_1_0_period, vcov = vcovHC(linreg_1_0_period, type = "HC0"))
linreg_1_0_period <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_1_0_period, vcov = vcovHC(linreg_1_0_period, type = "HC0"))
print(coeftest_results)
linreg_1_1_period <- lm(VWAP ~ CPI + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_1_1_period)
# Robust t test
coeftest_results <- coeftest(linreg_1_1_period, vcov = vcovHC(linreg_1_1_period, type = "HC0"))
print(coeftest_results)
linreg_2_0_period <- lm(VWAP ~ Crisis + StrongBrand + (Crisis*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_2_0_period, vcov = vcovHC(linreg_2_0_period, type = "HC0"))
print(coeftest_results)
linreg_2_1_period <- lm(VWAP ~ CPI + StrongBrand + (CPI*StrongBrand) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_2_1_period)
# Robust t test
coeftest_results <- coeftest(linreg_2_1_period, vcov = vcovHC(linreg_2_1_period, type = "HC0"))
print(coeftest_results)
linreg_3_0_period <- lm(VWAP ~ Crisis + BrandRanking + (Crisis*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_3_0_period)
# Robust t test
coeftest_results <- coeftest(linreg_3_0_period, vcov = vcovHC(linreg_3_0_period, type = "HC0"))
print(coeftest_results)
linreg_3_1_period <- lm(VWAP ~ CPI + BrandRanking + (CPI*BrandRanking) + Sector + TR + EBIT + VWAP_lagged, data = subset_period)
summary(linreg_3_1_period)
# Model 1.0 without controls, Crisis as IV
linreg1_0 <- lm(VWAP ~ Crisis, data = data)
summary(linreg1_0)
# Adding 1 control: Sector Information
linreg1_0 <- lm(VWAP ~ Crisis + Sector, data = data)
summary(linreg1_0)
# Adding 2nd control: TR
linreg1_0 <- lm(VWAP ~ Crisis + Sector + TR, data = data)
summary(linreg1_0)
# Adding 3rd control: EBIT
linreg1_0_ <- lm(VWAP ~ Crisis + Sector + TR + EBIT, data = data)
summary(linreg1_0)
# Finally: Adding 4th control: lagged VWAP
# Model 1.0 with controls, Crisis as IV
linreg1_0 <- lm(VWAP ~ Crisis + Sector + TR + EBIT + VWAP_lagged, data = data)
summary(linreg1_0)
# Model 1.1 without controls, CPI as IV
linreg1_1 <- lm(VWAP ~ CPI, data = data)
summary(linreg1_1)
# stepwise control adding
linreg1_1_ <- lm(VWAP ~ CPI + Sector + TR + EBIT, data = data)
summary(linreg1_1_)
# Robust t test
coeftest_results <- coeftest(linreg_2_0_period, vcov = vcovHC(linreg_2_0_period, type = "HC0"))
print(coeftest_results)
install.packages("readxl")
library(readxl)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("dplyr")
library(dplyr)
install.packages("lmtest")
library(lmtest)
install.packages("tidyverse")
library(tidyverse)
install.packages("tseries")
library(tseries)
install.packages("car")
library(car)
install.packages("plm")
library(plm)
install.packages("ggtext")
library(ggtext)
install.packages("reshape2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
